plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
    id 'checkstyle'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    mavenLocal()
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

    modImplementation "me.shedaniel.cloth:config-2:${project.cloth_version}"

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${project.jackson_version}"
    shadow "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${project.jackson_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    relocate 'com.fasterxml', 'dev.hephaestus.conrad.com.fasterxml'
    configurations = [project.configurations.shadow]
    classifier = "shadow"
}

jar {
    from "LICENSE"
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "${project.group}.${project.archivesBaseName}.shadow"
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar

remapJar {
    dependsOn shadowJar
    input.set shadowJar.archiveFile.get()
}

allprojects {
    apply plugin: 'checkstyle'
    checkstyle {
        configFile = rootProject.file("checkstyle.xml")
        toolVersion = '8.31'
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
         mavenLocal()
    }
}
